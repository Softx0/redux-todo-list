variables:
  GIT_CLONE_PATH: $CI_BUILDS_DIR/$CI_PROJECT_NAME
  GIT_STRATEGY: clone

stages:
  - build
  - deploy

before_script:
  - docker login -u gitlab-ci-token -p $CI_JOB_TOKEN $CI_REGISTRY

#### BUILD DEV ####
build_env_develop:
  stage: build
  script:
    - chmod +x ./setup_env.sh
    - ./setup_env.sh DEV

    - docker build -t redux-todo-list:$TAG_IMAGE_DEV -f Dockerfile .
  tags:
    - redux-todo-list-frontend-develop
  only:
    - develop

#### DEPLOY DEV ####
deploy_env_develop:
  variables:
    GIT_STRATEGY: none
  stage: deploy
  script:
    - docker push redux-todo-list:$TAG_IMAGE_DEV
    - docker-compose -f docker-compose.yml up -d
  tags:
    - redux-todo-list-frontend-develop
  only:
    - develop

#### BUILD QA ####
build_env_qa:
  stage: build
  script:
    - chmod +x ./setup_env.sh
    - ./setup_env.sh QA

    - docker build -t redux-todo-list:$TAG_IMAGE_QA -f Dockerfile .
    - docker build -t redux-todo-list:$CI_COMMIT_SHORT_SHA -f Dockerfile .
  tags:
    - redux-todo-list-frontend-qa
  only:
    - qa

#### DEPLOY QA ####
deploy_env_qa:
  variables:
    GIT_STRATEGY: none
  stage: deploy
  script:
    - docker push redux-todo-list:$TAG_IMAGE_QA
    - docker push redux-todo-list:$CI_COMMIT_SHORT_SHA

    - docker-compose -f docker-compose.yml up -d
  tags:
    - redux-todo-list-frontend-qa
  only:
    - qa

#### BUILD PROD ####
build_env_prod:
  stage: build
  script:
    - chmod +x ./setup_env.sh
    - ./setup_env.sh PROD

    - docker build -t redux-todo-list:$TAG_IMAGE_PROD .
    - docker build -t redux-todo-list:$CI_COMMIT_SHORT_SHA .
  artifacts:
    expire_in: 1 hour
    paths:
      - build
  tags:
    - redux-todo-list-frontend-production
  only:
    - main

#### DEPLOY PROD ####
deploy_env_prod:
  variables:
    GIT_STRATEGY: none
  stage: deploy
  script:
    - docker push redux-todo-list:$TAG_IMAGE_PROD
    - docker push redux-todo-list:$CI_COMMIT_SHORT_SHA

    - docker-compose -f docker-compose.yml up -d
  tags:
    - redux-todo-list-frontend-production
  only:
    - main
